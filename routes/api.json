{
  "info": {
    "title": "basejs API",
    "version": "0.0.1",
    "description": "Documentation of the RESTful API exposed by basejs"
  },
  "basePath": "/api",
  "swagger": "2.0",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "JWT": []
    }
  ],
  "x-security-role": "user",
  "paths": {
    "/auth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Create a JWT based on user credentials or a refresh token",
        "security": [],
        "x-security-role": "",
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "User credentials or refresh token",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string",
                  "format": "password"
                },
                "refresh": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New generated JWT",
            "schema": {
              "$ref": "#/definitions/JWT"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/auth/social/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Create a JWT based on social provider token",
        "security": [],
        "x-security-role": "",
        "parameters": [
          {
            "in": "body",
            "name": "social token",
            "description": "Social provider and its access token",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "provider",
                "token"
              ],
              "properties": {
                "provider": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New generated JWT",
            "schema": {
              "$ref": "#/definitions/JWT"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all users",
        "x-security-role": "admin",
        "parameters": [
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Users",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create a user",
        "security": [{}, { "JWT": [] }],
        "x-security-role": "",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "$ref": "#/parameters/idParam"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get a user by id",
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Update user fields by id",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContentResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get all products",
        "security": [{}, { "JWT": [] }],
        "x-security-role": "",
        "parameters": [
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "$ref": "#/parameters/sortParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Products",
            "schema": {
              "$ref": "#/definitions/ProductList"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Create a product",
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "Product to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "description": "Update products fields",
        "parameters": [
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "body",
            "name": "product",
            "description": "Product fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContentResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Delete all products",
        "parameters": [
          {
            "$ref": "#/parameters/filterParam"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContentResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    },
    "/products/{id}": {
      "parameters": [
        {
          "$ref": "#/parameters/idParam"
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get a product by id",
        "security": [{}, { "JWT": [] }],
        "x-security-role": "",
        "responses": {
          "200": {
            "description": "Product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "description": "Update product fields by id",
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "Product fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContentResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Replace a product by id",
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "Product to replace with",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContentResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Delete a product by id",
        "responses": {
          "204": {
            "$ref": "#/responses/NoContentResponse"
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "default": "user",
          "enum": ["sysadmin", "admin", "moderator", "user"]
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "UserList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Product": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "readOnly": true
        },
        "title": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "ownerId": {
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ProductList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Product"
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "statusCode"
      ],
      "properties": {
        "statusCode": {
          "type": "integer"
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "JWT": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "NoContentResponse": {
      "description": "OK"
    },
    "ErrorResponse": {
      "description": "Error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "parameters": {
    "idParam": {
      "name": "id",
      "in": "path",
      "description": "id of item",
      "required": true,
      "type": "string"
    },
    "filterParam": {
      "in": "query",
      "name": "filter",
      "type": "string",
      "description": "Filter by { 'field': 'value', ... }"
    },
    "sortParam": {
      "in": "query",
      "name": "sort",
      "type": "string",
      "description": "Sort by { 'field': 'asc/desc', 'field': 1/-1, ... }"
    },
    "skipParam": {
      "in": "query",
      "name": "skip",
      "type": "integer",
      "minimum": 1,
      "description": "Number of items to skip"
    },
    "limitParam": {
      "in": "query",
      "name": "limit",
      "type": "integer",
      "minimum": 1,
      "maximum": 100,
      "default": 20,
      "description": "Number of items to return (1 - 100)"
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
  ]
}
